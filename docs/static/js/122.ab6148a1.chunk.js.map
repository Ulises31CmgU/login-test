{"version":3,"file":"static/js/122.ab6148a1.chunk.js","mappings":"sPAEaA,EAAiB,SAACC,GAAD,OAAgBA,EAAMC,QAAtB,EAEjBC,GAAkBC,EAAAA,EAAAA,IAC7B,CAACJ,IACD,SAACE,GAAD,OAAcA,EAASG,SAAvB,IAGWC,GAAuBF,EAAAA,EAAAA,IAClC,CAACJ,IACD,SAACE,GAAD,OAAcA,EAASK,YAAvB,I,IAGiCH,EAAAA,EAAAA,IACjC,CAACJ,IACD,SAACE,GAAD,OAAcA,EAASM,YAAvB,I,6BC2DF,MA5DA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MAEXR,GAAWS,EAAAA,EAAAA,IAAYR,GACvBS,GAAgBD,EAAAA,EAAAA,IAAYL,GAElC,GAAsCO,EAAAA,EAAAA,UAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAUA,OAJAC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,IAAkBH,EAAaF,GACzC,GAAE,CAACA,EAAaE,KAGf,UAACI,EAAA,GAAD,CACEC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SACfC,QAAS,EACTC,GAAI,EANN,WAQE,SAACN,EAAA,GAAD,CAAMO,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,KAAD,CAAsBC,KAAM3B,OAG9B,UAACkB,EAAA,GAAD,CAAMC,WAAS,EAACM,MAAI,EAACH,eAAe,SAApC,WACE,SAACJ,EAAA,GAAD,CAAMO,MAAI,EAAV,UACE,SAAC,KAAD,CACEG,MAAOd,EACPe,aAzBiB,SAACC,GAC1Bf,EAAee,EAAMC,OAAOH,MAC7B,EAwBSI,eA3BiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GA4BjCC,SAAS,kCAGb,SAACf,EAAA,GAAD,CAAMO,MAAI,EAAV,UACE,SAAC,KAAD,CACES,eAAgBxB,EAChByB,iBAAkBrB,EAClBsB,iBAAkBvB,EAClBD,YAAaA,UAInB,SAACM,EAAA,GAAD,CAAMO,MAAI,EAACY,UAAU,WAAWC,GAAI,EAApC,UACE,SAACC,EAAA,EAAD,CAASC,MAAM,UAAUC,UAAU,YAAYC,OAAK,EAApD,UAEE,SAACC,EAAA,EAAD,CAAKC,MAAM,QAAQC,QAAS,kBAAMtC,GAASuC,EAAAA,EAAAA,MAAf,EAA5B,UACE,SAACC,EAAA,EAAD,YAMX,C","sources":["app/selectors/user-list.selectors.ts","pages/user-list/user-list-page.component.tsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectUserList = (state: any) => state.userList;\n\nexport const selectUsersData = createSelector(\n  [selectUserList],\n  (userList) => userList.usersList,\n);\n\nexport const selectUsersDataCount = createSelector(\n  [selectUserList],\n  (userList) => userList.userListSize,\n);\n\nexport const selectUserlistError = createSelector(\n  [selectUserList],\n  (userList) => userList.errorMessage,\n);\n","/* eslint-disable import/extensions */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Fab, Grid, Tooltip,\n} from '@mui/material';\nimport LogoutIcon from '@mui/icons-material/Logout';\n\nimport { requestUsersStart } from '../../app/slices/user-list.slice';\nimport { selectUsersData, selectUsersDataCount } from '../../app/selectors/user-list.selectors';\n\nimport { CardPreviewComponent, CustomSelectComponent, PaginationComponent } from '../../components';\nimport { logout } from '../../app/slices/user.slice';\n\nfunction UserListPageComponent() {\n  const dispatch = useDispatch();\n\n  const userList = useSelector(selectUsersData);\n  const userListCount = useSelector(selectUsersDataCount);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [dataPerPage, setDataPerPage] = useState(4);\n  const userDisplayOptions = [1, 2, 3, 4, 5, 6];\n  const handleSelectChange = (event:any) => {\n    setDataPerPage(event.target.value);\n  };\n\n  useEffect(() => {\n    dispatch(requestUsersStart(dataPerPage, currentPage));\n  }, [currentPage, dataPerPage]);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      spacing={3}\n      my={5}\n    >\n      <Grid item xs={12}>\n        <CardPreviewComponent data={userList} />\n      </Grid>\n\n      <Grid container item justifyContent=\"center\">\n        <Grid item>\n          <CustomSelectComponent\n            value={dataPerPage}\n            handleChange={handleSelectChange}\n            displayOptions={userDisplayOptions}\n            helpText=\"Amount of users to display\"\n          />\n        </Grid>\n        <Grid item>\n          <PaginationComponent\n            totalDataCount={userListCount}\n            dataCountPerPage={dataPerPage}\n            handlePageChange={setCurrentPage}\n            currentPage={currentPage}\n          />\n        </Grid>\n      </Grid>\n      <Grid item alignSelf=\"flex-end\" mr={2}>\n        <Tooltip title=\"Log out\" placement=\"top-start\" arrow>\n\n          <Fab color=\"error\" onClick={() => dispatch(logout())}>\n            <LogoutIcon />\n          </Fab>\n        </Tooltip>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default UserListPageComponent;\n"],"names":["selectUserList","state","userList","selectUsersData","createSelector","usersList","selectUsersDataCount","userListSize","errorMessage","dispatch","useDispatch","useSelector","userListCount","useState","currentPage","setCurrentPage","dataPerPage","setDataPerPage","useEffect","requestUsersStart","Grid","container","direction","alignItems","justifyContent","spacing","my","item","xs","data","value","handleChange","event","target","displayOptions","helpText","totalDataCount","dataCountPerPage","handlePageChange","alignSelf","mr","Tooltip","title","placement","arrow","Fab","color","onClick","logout","Logout"],"sourceRoot":""}